
먼저 GitHub.com에 가입한다.
필요에 따라 윈도우,맥,리눅스,용 깃을 설치

설치한 git bash 앱으로 다음 코드 타이핑

git config --global user.name "Your Name Here"

git config --global user.email "your_email@youremail.com"



1.일단 온라인 저장소의 repository name과 동일한 디렉터리를 로컬에 만든다

ex)c/MyProject 랑 github사이트에 repository name : MyProject를 만듬

mkdir해서 만드는거랑 똑같음~~~

mkdir ~/MyProject

2.해당 디렉터리에서 git init을 한다

3.아무 파일이나 만들고 git status 해서 파일들이 언트랙인지 트랙인지 상태를 확인한다.

4.깃이 untracked하면 파일을 보지 않고 있다는 말이다 파일을 주목하게 하려면

	git add "파일이름.txt"이런식으로  git add명령어로 track하게 만든다.


5.스냅샷을 찍꺼나 지금까지의 프로젝트를 commit해서 저장소에 올릴 준비를 한다.

 git commit -m "대략 어디까지 했나 말해주는 주석이라고 생각하면됨"

###중요 부분 커밋 메시지는 현재형: 커밋 했던것을 적는게 아니라 커밋한것을 적어야함

6. 이제 로컬에서 작은 작업을 하고 깃허브에 첫 커밋을 'push'할 때이다.


7.로컬 저장소와 깃허브 저장소 연결

remote 명령어로 원격 저장소와 로컬 저장소를 연결한다.

ex) git remote add origin https://github.com/username/myproject.git

근데 여기서 .git을 빼줘도 되던데...있는거랑 차이점 확인해보기

###중요 간단히 말하면 origin이 부분이 파일이름?이라고 생각하면 됨(ex)testtest,goldtest)뭐 이런식으로 저장가능

tip 

git remote -v로 어떤 저장소가 있는지 확인 할 수있다.



////////////////////////////////////////////////////

--삭제된 파일은

git add -u명령어를 사용하면 전부 git status에서 확인 해 보면 전부 추적한다(바뀌었던지 삭제되었던지 모두)


--git add를 undo 하러면

git reset <file> 하거나
git reset 



